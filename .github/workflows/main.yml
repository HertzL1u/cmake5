name: Cmake-dll
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs :
  build:
    name: ${{} matrix.config.name }
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows VS 2017",
            os: windows-latest,
            artifact: "windows_msvc.7z",
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            archiver: "7z a",
            generators: "Visual Studio 15 2017"
          }
        - {
            name:  "Windows VS 2022",
            os: windows-latest,
            artifact: "windows_msvc.7z",
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            archiver: "7z a",
            generators: "Visual Studio 17 2022"
          }
    steps:
      - uses: actions/checkout@v1
      - name: Display the path by pwsh
        run: echo ${env:PATH}
        shell: pwsh
      - name: Display github.workspace by pwsh
        run: |
          echo "github.workspace is ${{github.workspace}}."
          ls ${{github.workspace}}
        shell: pwsh
      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          cmake --version
      - name: CMake Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
                   -G "${{ matrix.config.generators }}" \
                   -DCMAKE_INSTALL_PREFIX:PATH=instdir
          ls
        shell: pwsh
      - name: make
        run: |
          cd ${{github.workspace}}\build 
          cmake --build . --config ${{ matrix.config.build_type }}
          ls
        shell: pwsh 
      - name: print bin
        run: |
          cd ${{github.workspace}}\build\bin\Debug
          ls
        shell: pwsh  
